name: Main

on:
  push:

defaults:
  run:
    shell: bash

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  packages: write
  pull-requests: write
  issues: write

jobs:
  info:
    runs-on: ubuntu-latest
    outputs:
      modules: ${{ steps.modules.outputs.names }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup golang
        uses: actions/setup-go@v3
        with:
          go-version-file: "go.work"
      - id: modules
        name: Get modules path
        run: ./scripts/main.sh modules name
  licensecheck:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Scanning dependencies
        uses: fossas/fossa-action@v1
        with:
          api-key: ${{ secrets.FOSSA_API_KEY }}
      - name: Testing dependencies
        uses: fossas/fossa-action@v1
        with:
          api-key: ${{ secrets.FOSSA_API_KEY }}
          run-tests: true
  testing:
    runs-on: ubuntu-latest
    needs:
      - info
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup golang
        uses: actions/setup-go@v3
        with:
          go-version-file: "go.work"
      - name: Building
        run: ./scripts/main.sh build
      - name: Linting
        uses: golangci/golangci-lint-action@v3
        with:
          ## Output never works because golangci override the configuration
          ## workaround: https://github.com/golangci/golangci-lint-action/issues/119#issuecomment-981090648
          ## issue: https://github.com/golangci/golangci-lint-action/issues/458
          ## reference: https://github.com/golangci/golangci-lint-action/blob/e1c0a0543ff3084b0730d8b0570e39c1416f6bc9/src/run.ts#L130-L133
          args: >
            --out-${NO_FUTURE}format
            checkstyle:reports/checkstyle.xml,github-actions
            --fix
            ${{ needs.info.outputs.modules }}
      - name: Testing
        run: ./scripts/main.sh test
      - name: Debugging
        run: ls -la ./reports
      - name: Scaning
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Pushing back
        run: |
          if ! git diff --quiet --exit-code; then
            git config user.name github-actions
            git config user.email actions@github.com
            git add --all
            git commit -m "chore: formatting code [skip ci]"
            git push
          fi
